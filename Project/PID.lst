C51 COMPILER V9.01   PID                                                                   03/26/2019 10:13:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN ..\User\obj\PID.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\User\src\PID.c LARGE BROWSE INCDIR(..\FwLib\Include;..\User\inc) DEFINE(
                    -FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\PID.lst) OBJECT(..\User\obj\PID.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "Common.h"
   6          #include "stdio.h"
   7          #include "string.h"
   8          
   9          
  10          #include "userdefine.h"
  11          
  12          
  13          
  14          
  15          
  16          // PID PID_CC_charge;       //控制调节恒流充电
  17          //
  18          // PID PID_CV_charge;     //控制调节恒压充电
  19           
  20           PID PID_CC_discharge;  //控制调节恒流输出
  21           
  22          
  23          
  24          
  25          
  26          float pid_calc( PID *pp, int NowPoint )
  27          {
  28   1              float PWM_var;
  29   1              
  30   1              float dError, Error; 
  31   1              
  32   1              float dk;
  33   1              
  34   1              dk=5.0; //---caiwk-2018-5-17---!!!
  35   1              
  36   1              Error = pp->SetPoint - NowPoint;            // 先计算偏差
  37   1              
  38   1              if(limit_power_pid_flag==0x01)
  39   1              {
  40   2                      if((Error<=2)&&(Error>=-2))             
  41   2                              {
  42   3                                      dk=200.0;
  43   3                              }
  44   2                              else if(Error>=4)
  45   2                              {
  46   3                                      dk=200.0; 
  47   3                              }
  48   2                              else if(Error<=-4)
  49   2                              {
  50   3                                      dk=200.0;
  51   3                              }
  52   2              }
  53   1              else
  54   1              {
C51 COMPILER V9.01   PID                                                                   03/26/2019 10:13:40 PAGE 2   

  55   2                      if(pid_index==0x01)
  56   2                      {  
  57   3                                                      
  58   3                              if((Error<=1)&&(Error>=-1))             
  59   3                              {
  60   4                                      Error=0;
  61   4                              }
  62   3                              else if(Error>=2)
  63   3                              {
  64   4                                      dk=200.0; 
  65   4                              }
  66   3                              else if(Error<=-2)
  67   3                              {
  68   4                                      dk=200.0;
  69   4                              }
  70   3                              else
  71   3                              {
  72   4                                      dk=200.0;
  73   4                              }
  74   3                      
  75   3                      }
  76   2                      else if(pid_index==0x02)
  77   2                      {
  78   3                              if((Error<=1)&&(Error>=-1))             
  79   3                              {
  80   4                                      Error=0;
  81   4                              }
  82   3                              else if((Error>=2)||(Error<=-2))
  83   3                              {
  84   4                                      dk=100.0; 
  85   4                              }
  86   3                      }
  87   2                              
  88   2              }
  89   1                      
  90   1              
  91   1              pp->SumError += Error;                      // 在对偏差进行积分
  92   1      
  93   1      
  94   1           
  95   1          if((pp->SumError)>=2)     pp->SumError=  2;
  96   1          else if((pp->SumError)<=-2)  pp->SumError= -2;
  97   1      
  98   1              dError = pp->LastError - pp->PrevError;     // 对偏差微分
  99   1              
 100   1              pp->PrevError = pp->LastError;
 101   1              
 102   1              pp->LastError = Error;
 103   1                                              // -------比例项-----------------积分项----------------------------微分项---
 104   1              PWM_var=(pp->Proportion * Error*dk  + pp->Integral * pp->SumError  + pp->Derivative * dError  ) ;        
             -      
 105   1      
 106   1      
 107   1                      if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
 108   1                      {
 109   2                              if(light_mode==0x00)
 110   2                              {
 111   3                                      if((ho_cnt==0) && (mi_cnt==0) && (se_cnt<30))
 112   3                                      {
 113   4                                              if(PWM_var>=2)PWM_var           =  2;
 114   4                                              else  if(PWM_var <= -2)PWM_var  = -2;
 115   4                                      }
C51 COMPILER V9.01   PID                                                                   03/26/2019 10:13:40 PAGE 3   

 116   3                                      else
 117   3                                      {
 118   4                                              if(PWM_var>=0.1)PWM_var           =  0.1;
 119   4                                              else  if(PWM_var <= -0.1)PWM_var  = -0.1;
 120   4                                      }
 121   3                              }
 122   2                              else
 123   2                              {
 124   3                                      if(PWM_var>=2)PWM_var           =  2;
 125   3                                      else  if(PWM_var <= -2)PWM_var  = -2; 
 126   3                              }
 127   2                              
 128   2                      }
 129   1                      else if((Error>5)||(Error<-5))
 130   1                      {
 131   2                              if(light_mode==0x00)
 132   2                              {
 133   3                                      if((ho_cnt==0) && (mi_cnt==0) && (se_cnt<30))
 134   3                                      {
 135   4                                              if(PWM_var>=5)PWM_var           =  5;
 136   4                                              else  if(PWM_var <= -5)PWM_var  = -5;
 137   4                                      }
 138   3                                      else
 139   3                                      {
 140   4                                              if(PWM_var>=0.1)PWM_var           =  0.1;
 141   4                                              else  if(PWM_var <= -0.1)PWM_var  = -0.1;
 142   4                                      }
 143   3                              }
 144   2                              else
 145   2                              {
 146   3                                      if(PWM_var>=5)PWM_var           =  5;
 147   3                                      else  if(PWM_var <= -5)PWM_var  = -5; 
 148   3                              } 
 149   2                      }
 150   1                      else
 151   1                      {
 152   2                              if(have_person1_flag)
 153   2                              {
 154   3                                      if(light_mode==0x00)
 155   3                                      {
 156   4                                              if(PWM_var>=0.1)PWM_var           =  0.1;
 157   4                                              else  if(PWM_var <= -0.1)PWM_var  = -0.1;
 158   4                                      }
 159   3                                      else
 160   3                                      {
 161   4                                              if(PWM_var>=0.5)PWM_var           =  0.5;
 162   4                                              else  if(PWM_var <= -0.5)PWM_var  = -0.5;
 163   4                                      }
 164   3                                      
 165   3                              }
 166   2                              else
 167   2                              {
 168   3                                      if(light_mode==0x00)
 169   3                                      {
 170   4                                              if(PWM_var>=0.1)PWM_var           =  0.1;
 171   4                                              else  if(PWM_var <= -0.1)PWM_var  = -0.1;
 172   4                                      }
 173   3                                      else
 174   3                                      {
 175   4                                              if(PWM_var>=0.5)PWM_var           =  0.5;
 176   4                                              else  if(PWM_var <= -0.5)PWM_var  = -0.5;
 177   4                                      }
C51 COMPILER V9.01   PID                                                                   03/26/2019 10:13:40 PAGE 4   

 178   3                              }
 179   2                               
 180   2                      }               
 181   1      
 182   1          
 183   1          return (PWM_var );
 184   1      }
 185          
 186          
 187          
 188          
 189          /*====================================================================================================
 190          　　　　 Initialize PID Structure
 191          =====================================================================================================*/
 192          void pid_init ( PID *pp)
 193          {
 194   1              memset (pp,0,sizeof(PID));
 195   1      }
 196          
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1864    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     28      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
